[tox]
envlist = py37-dev
skipsdist = True

[testenv]
#install_command = pip3 install {packages}
#usedevelop = True
whitelist_externals =
    env
    find
    rm
    bash
    pwd
    bazel
    cp

setenv = VIRTUAL_ENV={envdir}
         LANGUAGE=en_US
         LC_ALL=en_US.utf-8
         PROJECT_PATH={toxinidir}
         file|./deploy/scripts/const.properties

commands =
    find . -type f -name "*.pyc" -delete
    bash {toxinidir}/deploy/scripts/build_proto.sh
    bazel clean
    bash -c 'bazel build $client_bazel_obj $sdk_bazel_obj $coordinator_bazel_obj $job_scheduler_bazel_obj $cli_bazel_obj $selector_bazel_obj'
    bash -c 'python3.7 -m pip uninstall --disable-pip-version-check -y $client_whl $sdk_whl $coordinator_whl $job_scheduler_whl $cli_whl $selector_whl'
    bash -c 'python3.7 -m pip install --upgrade --disable-pip-version-check $client_whl $sdk_whl $coordinator_whl $job_scheduler_whl $cli_whl $selector_whl'
    pylint --reports=n -f colorized --jobs=1 {toxinidir}/neursafe_fl
    flake8 --statistics --count --benchmark {toxinidir}/neursafe_fl --exclude={toxinidir}/.tox,{toxinidir}/neursafe_fl/proto/
    bash -c 'py.test --cov={toxinidir}/neursafe_fl -q -s {toxinidir}/neursafe_fl; ret=$?; if [ "$ret" = 5 ]; then exit 0; else exit "$ret"; fi'

deps =
    pytest==6.2.1
    pytest-cov
    pytest-xdist
    pylint==2.6.0
    flake8==3.8.4
    grpcio-tools==1.34.0
    grpclib==0.4.1
    mock==4.0.3

[flake8]
max-line-length=80
per-file-ignores =
    # E501: line too long
    *_test.py:E501
    test_*.py:E501

[pytest]
python_files=test_*
